# Vision Inspection System - Common Nginx Configuration
# 
# This file contains the common proxy configuration used by both HTTP and HTTPS servers.
# It handles routing for both the frontend and backend API.

# ==================== SECURITY HEADERS ====================

# Prevent clickjacking
add_header X-Frame-Options "SAMEORIGIN" always;

# Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# Enable XSS protection
add_header X-XSS-Protection "1; mode=block" always;

# Referrer policy
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Content Security Policy (adjust as needed)
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;

# Strict Transport Security (HSTS) - Only for HTTPS
# add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

# ==================== LOGGING ====================

# Access log
access_log /var/log/nginx/vision-inspection-access.log combined;

# Error log
error_log /var/log/nginx/vision-inspection-error.log warn;

# ==================== GENERAL SETTINGS ====================

# Client body size (for image uploads)
client_max_body_size 50M;

# Timeouts
client_body_timeout 60s;
client_header_timeout 60s;
send_timeout 60s;

# Buffer sizes
client_body_buffer_size 128k;
client_header_buffer_size 1k;
large_client_header_buffers 4 8k;

# ==================== BACKEND API PROXY ====================

# Backend API endpoints
location /api {
    proxy_pass http://backend_api;
    proxy_http_version 1.1;
    
    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Connection headers
    proxy_set_header Connection "";
    
    # Timeouts (long for inspections)
    proxy_connect_timeout 60s;
    proxy_send_timeout 120s;
    proxy_read_timeout 120s;
    
    # Buffering
    proxy_buffering off;
    proxy_request_buffering off;
    
    # Error handling
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
}

# ==================== WEBSOCKET PROXY ====================

# WebSocket endpoint for Socket.IO
location /socket.io {
    proxy_pass http://backend_api;
    proxy_http_version 1.1;
    
    # WebSocket upgrade headers
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts (very long for persistent connections)
    proxy_connect_timeout 7d;
    proxy_send_timeout 7d;
    proxy_read_timeout 7d;
    
    # Disable buffering for WebSocket
    proxy_buffering off;
}

# ==================== FRONTEND PROXY ====================

# Frontend application
location / {
    proxy_pass http://frontend;
    proxy_http_version 1.1;
    
    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket support for Next.js hot reload (development)
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Buffering
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
}

# ==================== STATIC ASSETS (Optional) ====================

# Next.js static files
location /_next/static {
    proxy_pass http://frontend;
    proxy_cache_valid 200 60m;
    add_header Cache-Control "public, max-age=3600, immutable";
}

# Images and media
location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
    proxy_pass http://frontend;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable";
}

# Fonts
location ~* \.(woff|woff2|ttf|otf|eot)$ {
    proxy_pass http://frontend;
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
}

# ==================== HEALTH CHECK ====================

# Health check endpoint (bypass proxy for direct nginx response)
location /nginx-health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
}

# Backend health check
location /api/health {
    proxy_pass http://backend_api/api/health;
    proxy_http_version 1.1;
    access_log off;
}

# ==================== ERROR PAGES ====================

# Custom error pages (optional)
error_page 502 503 504 /50x.html;
location = /50x.html {
    root /usr/share/nginx/html;
}

# ==================== SECURITY ====================

# Deny access to hidden files
location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
}

# Deny access to backup files
location ~ ~$ {
    deny all;
    access_log off;
    log_not_found off;
}

